[{"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/index.js":"1","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/App.js":"2","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/campsites.js":"5","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/partners.js":"12","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/comments.js":"13","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/promotions.js":"14","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/campsites.js":"17","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/comments.js":"18","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/partners.js":"19","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/promotions.js":"20","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/ActionTypes.js":"21","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/ActionCreators.js":"22","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/forms.js":"24","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":683,"mtime":1612184913189,"results":"26","hashOfConfig":"27"},{"size":539,"mtime":1612963592169,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1611431176502,"results":"29","hashOfConfig":"27"},{"size":1739,"mtime":1613509027510,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1612272699015,"results":"31","hashOfConfig":"27"},{"size":6027,"mtime":1613519574314,"results":"32","hashOfConfig":"27"},{"size":3826,"mtime":1613521026808,"results":"33","hashOfConfig":"27"},{"size":4421,"mtime":1612878653999,"results":"34","hashOfConfig":"27"},{"size":2150,"mtime":1612216158675,"results":"35","hashOfConfig":"27"},{"size":1239,"mtime":1613509508864,"results":"36","hashOfConfig":"27"},{"size":8816,"mtime":1613413683279,"results":"37","hashOfConfig":"27"},{"size":1054,"mtime":1612272698915,"results":"38","hashOfConfig":"27"},{"size":4243,"mtime":1612272698951,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1612272698864,"results":"40","hashOfConfig":"27"},{"size":3575,"mtime":1612635862603,"results":"41","hashOfConfig":"27"},{"size":722,"mtime":1613413252298,"results":"42","hashOfConfig":"27"},{"size":610,"mtime":1613396260316,"results":"43","hashOfConfig":"27"},{"size":518,"mtime":1613519372838,"results":"44","hashOfConfig":"27"},{"size":166,"mtime":1613248676931,"results":"45","hashOfConfig":"27"},{"size":642,"mtime":1613484038655,"results":"46","hashOfConfig":"27"},{"size":437,"mtime":1613482500217,"results":"47","hashOfConfig":"27"},{"size":4026,"mtime":1613519928312,"results":"48","hashOfConfig":"27"},{"size":208,"mtime":1613394425756,"results":"49","hashOfConfig":"27"},{"size":153,"mtime":1613413056743,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1613482463231,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"ttc7ew",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/index.js",[],["107","108"],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/App.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/campsites.js",[],["109","110"],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["111","112","113"],"import React, { Component } from 'react'\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Label,\n} from 'reactstrap'\nimport { Control, LocalForm, Errors } from 'react-redux-form'\nimport { Link } from 'react-router-dom'\n\nimport { baseUrl } from '../shared/baseUrl'\nimport { Loading } from './LoadingComponent'\n\nconst required = (val) => val && val.length\nconst maxLength = (len) => (val) => !val || val.length <= len\nconst minLength = (len) => (val) => val && val.length >= len\n\nfunction RenderCampsite({ campsite }) {\n  return (\n    <div className=\"col-md-5 m-1\">\n      <Card>\n        <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n        <CardBody>\n          <CardText>{campsite.description}</CardText>\n        </CardBody>\n      </Card>\n    </div>\n  )\n}\n\nfunction RenderComments({ comments, postComment, campsiteId }) {\n  if (comments) {\n    return (\n      <div className=\"col-md-5 m-1\">\n        <h4>Comments</h4>\n        {comments.map((comment) => (\n          <div className=\"row m-1\" key={comment.id}>\n            <p>\n              {comment.text}\n              <br />\n              --{comment.author},{' '}\n              {new Intl.DateTimeFormat('en-US', {\n                year: 'numeric',\n                month: 'short',\n                day: '2-digit',\n              }).format(new Date(Date.parse(comment.date)))}\n            </p>\n          </div>\n        ))}\n        <CommentForm campsiteId={campsiteId} postComment={postComment} />\n      </div>\n    )\n  }\n  return <div />\n}\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isModalOpen: false,\n    }\n\n    this.toggleModal = this.toggleModal.bind(this)\n    this.handleSubmmit = this.handleSubmmit.bind(this)\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    })\n  }\n\n  handleSubmmit(values) {\n    this.toggleModal()\n    this.props.postComment(\n      this.props.campsiteId,\n      values.rating,\n      values.author,\n      values.text\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <Button outline onClick={this.toggleModal}>\n          <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n        </Button>\n\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmmit(values)}>\n              <div className=\"form-group\">\n                <Label htmlFor=\"rating\">Rating</Label>\n                <Control.select\n                  model=\".rating\"\n                  id=\"rating\"\n                  name=\"rating\"\n                  className=\"form-control\"\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                </Control.select>\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"author\">Your Name</Label>\n                <Control.text\n                  model=\".author\"\n                  id=\"author\"\n                  name=\"author\"\n                  className=\"form-control\"\n                  placeholder=\"Cindy Sue\"\n                  validators={{\n                    required,\n                    minLength: minLength(2),\n                    maxLength: maxLength(15),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".author\"\n                  show=\"touched\"\n                  component=\"div\"\n                  messages={{\n                    required: 'Required',\n                    minLength: 'Must be at least 2 characters',\n                    maxLength: 'Must be 15 characters or less',\n                  }}\n                />\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"text\">Comment</Label>\n                <Control.textarea\n                  model=\".text\"\n                  id=\"text\"\n                  name=\"text\"\n                  rows=\"6\"\n                  className=\"form-control\"\n                  validators={{ required }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".text\"\n                  show=\"touched\"\n                  component=\"div\"\n                  messages={{\n                    required: 'Required',\n                  }}\n                />\n              </div>\n              <Button type=\"submt\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nfunction CampsiteInfo(props) {\n  if (props.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    )\n  }\n\n  if (props.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4>{props.errMess}</h4>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (props.campsite) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/directory\">Directory</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>{props.campsite.name}</h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderCampsite campsite={props.campsite} />\n          <RenderComments\n            comments={props.comments}\n            postComment={props.postComment}\n            campsiteId={props.campsite.id}\n          />\n        </div>\n      </div>\n    )\n  }\n  return <div />\n}\n\nexport default CampsiteInfo\n","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/ContactComponent.js",["114","115","116","117","118","119","120","121"],"import React, { Component } from 'react'\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport { Control, Form, Errors, Actions } from 'react-redux-form'\n\nconst required = (val) => val && val.length\nconst maxLength = (len) => (val) => !val || val.length <= len\nconst minLength = (len) => (val) => val && val.length >= len\nconst isNumber = (val) => !isNaN(+val)\nconst validEmail = (val) =>\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      phoneNum: '',\n      email: '',\n      agree: false,\n      contactType: 'By Phone',\n      feedback: '',\n      touched: {\n        firstName: false,\n        lastName: false,\n        phoneNum: false,\n        email: false,\n      },\n    }\n  }\n\n  handleSubmit(values) {\n    console.log('Current state is: ' + JSON.stringify(values))\n    alert('Current state is: ' + JSON.stringify(values))\n    this.props.resetFeedbackForm()\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/home\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <h2>Contact Us</h2>\n            <hr />\n          </div>\n        </div>\n\n        <div className=\"row row-content align-items-center\">\n          <div className=\"col-sm-4\">\n            <h5>Our Address</h5>\n            <address>\n              1 Nucamp Way\n              <br />\n              Seattle, WA 98001\n              <br />\n              U.S.A.\n            </address>\n          </div>\n          <div className=\"col\">\n            <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\">\n              <i className=\"fa fa-phone\" /> 1-206-555-1234\n            </a>\n            <br />\n            <a\n              role=\"button\"\n              className=\"btn btn-link\"\n              href=\"mailto:fakeemail@fakeemail.co\"\n            >\n              <i className=\"fa fa-envelope-o\" /> campsites@nucamp.co\n            </a>\n          </div>\n        </div>\n\n        {/*=== Contact Form ===*/}\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h2>Send us your Feedback</h2>\n            <hr />\n          </div>\n          <div className=\"col-md-10\">\n            <Form\n              model=\"feedbackForm\"\n              onSubmit={(values) => this.handleSubmit(values)}\n            >\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstName\" md={2}>\n                  First Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".firstName\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    className=\"form-control\"\n                    placeholder=\"First Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".firstName\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 15 characters or les',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastName\" md={2}>\n                  Last Name\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".lastName\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    className=\"form-control\"\n                    placeholder=\"Last Name\"\n                    validators={{\n                      required,\n                      minLength: minLength(2),\n                      maxLength: maxLength(15),\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".lastName\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 2 characters',\n                      maxLength: 'Must be 15 characters or less',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"phoneNum\" md={2}>\n                  Phone\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".phoneNum\"\n                    id=\"phoneNum\"\n                    name=\"phoneNum\"\n                    className=\"form-control\"\n                    placeholder=\"Phone number\"\n                    validators={{\n                      required,\n                      minLength: minLength(10),\n                      maxLength: maxLength(15),\n                      isNumber,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".phoneNum\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      minLength: 'Must be at least 10 number',\n                      maxLength: 'Must be 15 numbers or less',\n                      isNumber: 'Must contain only digits',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>\n                  Email\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".email\"\n                    id=\"email\"\n                    name=\"email\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    validators={{\n                      required,\n                      validEmail,\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".email\"\n                    show=\"touched\"\n                    component=\"div\"\n                    messages={{\n                      required: 'Required',\n                      validEmail:\n                        'Must be a valid email address containing \"@\" and ending in a valid domain.',\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 4, offset: 2 }}>\n                  <div className=\"form-check\">\n                    <Label check>\n                      <Control.checkbox\n                        model=\".agree\"\n                        name=\"agree\"\n                        className=\"form-check-input\"\n                      />{' '}\n                      <strong>May we contact you?</strong>\n                    </Label>\n                  </div>\n                </Col>\n                <Col md={4}>\n                  <Control.select\n                    model=\".contactType\"\n                    name=\"contactType\"\n                    className=\"form-control\"\n                  >\n                    <option>By Phone</option>\n                    <option>By Email</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"feedback\" md={2}>\n                  Your Feedback\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model=\".feedback\"\n                    id=\"feedback\"\n                    name=\"feedback\"\n                    rows=\"12\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }}>\n                  <Button type=\"submit\" color=\"primary\">\n                    Send Feedback\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Contact\n","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/partners.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/comments.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/promotions.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/AboutComponent.js",["122"],"import React from 'react'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardBody,\n  CardHeader,\n  Media,\n} from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport { render } from '@testing-library/react'\n\nfunction RenderPartner({ partner }) {\n  if (partner) {\n    return (\n      <React.Fragment>\n        <Media object src={partner.image} alt={partner.name} width=\"150\" />\n        <Media body className=\"ml-5 mb-4\">\n          <Media heading>{partner.name}</Media>\n          {partner.description}\n        </Media>\n      </React.Fragment>\n    )\n  }\n  return <div />\n}\n\nfunction About(props) {\n  const partners = props.partners.map((partner) => {\n    return (\n      <Media key={partner.id} tag=\"li\">\n        <RenderPartner partner={partner} />\n      </Media>\n    )\n  })\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/home\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>About Us</BreadcrumbItem>\n          </Breadcrumb>\n          <h2>About Us</h2>\n          <hr />\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-sm-6\">\n          <h3>Our Mission</h3>\n          <p>\n            We present a curated database of the best campsites in the vast\n            woods and backcountry of the World Wide Web Wilderness. We increase\n            access to adventure for the public while promoting safe and\n            respectful use of resources. The expert wilderness trekkers on our\n            staff personally verify each campsite to make sure that they are up\n            to our standards. We also present a platform for campers to share\n            reviews on campsites they have visited with each other.\n          </p>\n        </div>\n        <div className=\"col-sm-6\">\n          <Card>\n            <CardHeader className=\"bg-primary text-white\">\n              <h3>Facts At a Glance</h3>\n            </CardHeader>\n            <CardBody>\n              <dl className=\"row\">\n                <dt className=\"col-6\">Founded</dt>\n                <dd className=\"col-6\">February 3, 2016</dd>\n                <dt className=\"col-6\">No. of Campsites in 2019</dt>\n                <dd className=\"col-6\">563</dd>\n                <dt className=\"col-6\">No. of Reviews in 2019</dt>\n                <dd className=\"col-6\">4388</dd>\n                <dt className=\"col-6\">Employees</dt>\n                <dd className=\"col-6\">42</dd>\n              </dl>\n            </CardBody>\n          </Card>\n        </div>\n        <div className=\"col\">\n          <Card className=\"bg-light mt-3\">\n            <CardBody>\n              <blockquote className=\"blockquote\">\n                <p className=\"mb-0\">\n                  I will not follow where the path may lead, but I will go where\n                  there is no path, and I will leave a trail.\n                </p>\n                <footer className=\"blockquote-footer\">\n                  Muriel Strode,{' '}\n                  <cite title=\"Source Title\">\n                    \"Wind-Wafted Wild Flowers\" - The Open Court, 1903\n                  </cite>\n                </footer>\n              </blockquote>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12\">\n          <h3>Community Partners</h3>\n        </div>\n        <div className=\"col mt-4\">\n          <Media list>{partners}</Media>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/campsites.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/comments.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/partners.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/promotions.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/redux/forms.js",[],"/Users/jdunstan/Coding/Nucamp/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"123","replacedBy":"127"},{"ruleId":"125","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":105,"column":17,"nodeType":"131","endLine":110,"endColumn":18},{"ruleId":"129","severity":1,"message":"132","line":120,"column":17,"nodeType":"131","endLine":131,"endColumn":19},{"ruleId":"129","severity":1,"message":"133","line":146,"column":17,"nodeType":"131","endLine":153,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":4,"column":33,"nodeType":"136","messageId":"137","endLine":4,"endColumn":40},{"ruleId":"129","severity":1,"message":"132","line":102,"column":19,"nodeType":"131","endLine":113,"endColumn":21},{"ruleId":"129","severity":1,"message":"132","line":132,"column":19,"nodeType":"131","endLine":143,"endColumn":21},{"ruleId":"129","severity":1,"message":"132","line":162,"column":19,"nodeType":"131","endLine":174,"endColumn":21},{"ruleId":"129","severity":1,"message":"132","line":194,"column":19,"nodeType":"131","endLine":204,"endColumn":21},{"ruleId":"129","severity":1,"message":"138","line":222,"column":23,"nodeType":"131","endLine":226,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":232,"column":19,"nodeType":"131","endLine":236,"endColumn":20},{"ruleId":"129","severity":1,"message":"133","line":247,"column":19,"nodeType":"131","endLine":253,"endColumn":21},{"ruleId":"134","severity":1,"message":"139","line":11,"column":10,"nodeType":"136","messageId":"137","endLine":11,"endColumn":16},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'Actions' is defined but never used.","Identifier","unusedVar","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]